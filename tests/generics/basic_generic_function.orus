// Basic generic function test (syntax may not be supported yet)
fn identity<T>(value: T) -> T {
    return value
}

fn max<T>(a: T, b: T) -> T {
    if a > b {
        return a
    } else {
        return b
    }
}

fn main() {
    // Test with integers
    let int_val = identity<i32>(42)
    print("identity<i32>(42) = {}", int_val)
    
    let max_int = max<i32>(10, 20)
    print("max<i32>(10, 20) = {}", max_int)
    
    // Test with floats
    let float_val = identity<f64>(3.14)
    print("identity<f64>(3.14) = {}", float_val)
    
    let max_float = max<f64>(2.5, 1.8)
    print("max<f64>(2.5, 1.8) = {}", max_float)
    
    // Test with strings
    let str_val = identity<string>("hello")
    print("identity<string>(\"hello\") = {}", str_val)
}
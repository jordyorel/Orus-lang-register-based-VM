// Test for different data type handling in functions
// This tests how functions handle different types and type conversions

// Test with integer parameters
fn addIntegers(a: i32, b: i32) -> i32 {
    return a + b
}

// Test with float parameters
fn addFloats(a: f64, b: f64) -> f64 {
    return a + b
}

// Test with mixed types
fn multiplyMixed(a: i32, b: f64) -> f64 {
    let a_float = a
    return a_float * b
}

// Test with boolean return
fn isPositive(num: i32) -> bool {
    return num > 0
}

// Test with multiple return paths
fn getSign(num: i32) -> i32 {
    if num > 0 {
        return 1
    }
    if num < 0 {
        return -1
    }
    return 0
}

print("Testing integer functions:")
print(addIntegers(10, 20))     // Should print 30
print(addIntegers(-5, 15))     // Should print 10

print("Testing float functions:")
print(addFloats(1.5, 2.5))     // Should print 4.0
print(addFloats(-3.25, 7.75))  // Should print 4.5

print("Testing mixed type functions:")
print(multiplyMixed(5, 2.5))   // Should print 12.5
print(multiplyMixed(4, -1.5))  // Should print -6.0

print("Testing boolean return:")
print(isPositive(10))          // Should print true
print(isPositive(-5))          // Should print false
print(isPositive(0))           // Should print false

print("Testing multiple return paths:")
print(getSign(42))             // Should print 1
print(getSign(-13))            // Should print -1
print(getSign(0))              // Should print 0
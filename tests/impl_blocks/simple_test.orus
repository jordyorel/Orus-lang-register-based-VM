// Simple Impl Block Test
// Basic functionality test

struct Counter {
    value: i32,
}

impl Counter {
    fn new() -> Counter {
        return Counter { value: 0 as i32 }
    }
    
    fn get_value(self) -> i32 {
        return self.value
    }
    
    fn increment(self) {
        self.value = self.value + (1 as i32)
    }
}

fn main() {
    let counter: Counter = Counter.new()
    print("Initial value: {}", counter.get_value())
    
    counter.increment()
    print("After increment: {}", counter.get_value())
    
    counter.increment()
    print("After second increment: {}", counter.get_value())
}
// Complex enum test with multiple data types (simplified)
enum Message {
    Quit,
    Move,
    Write,
    ChangeColor
}

enum Vehicle {
    Car,
    Bike,
    Plane,
    Boat
}

fn main() {
    // Test creating complex enum variants
    let quit_msg = Message.Quit
    let move_msg = Message.Move
    let write_msg = Message.Write
    let color_msg = Message.ChangeColor
    
    print("Testing Message enum:")
    print("quit_msg: {}", quit_msg)
    print("move_msg: {}", move_msg)
    print("write_msg: {}", write_msg)
    print("color_msg: {}", color_msg)
    
    // Test enum equality
    if quit_msg == Message.Quit {
        print("quit_msg is Quit - correct!")
    }
    
    if move_msg == Message.Move {
        print("move_msg is Move - correct!")
    }
    
    // Test Vehicle enum
    let car = Vehicle.Car
    let bike = Vehicle.Bike
    let plane = Vehicle.Plane
    let boat = Vehicle.Boat
    
    print("Testing Vehicle enum:")
    print("car: {}", car)
    print("bike: {}", bike)
    print("plane: {}", plane)
    print("boat: {}", boat)
    
    // Test vehicle equality
    if car == Vehicle.Car {
        print("car is Car - correct!")
    }
    
    if boat == Vehicle.Boat {
        print("boat is Boat - correct!")
    }
    
    print("Complex enum test completed!")
}